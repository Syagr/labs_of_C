class Program
{
        
    delegate void MyDelegate(string message);

    static void Main()
    {
        MyDelegate myDelegate = new MyDelegate(PrintMessage);
        myDelegate("Hello, custom delegate!");

        UseAction(() => Console.WriteLine("Action executed."));
        int resultFunc = UseFunc((a, b) => a + b, 5, 10);
        bool resultPredicate = UsePredicate(x => x > 0, 7);

        Console.WriteLine($"Func result: {resultFunc}");
        Console.WriteLine($"Predicate result: {resultPredicate}");

        Func<int, int, int> add = (a, b) => a + b;
        Console.WriteLine($"Sum: {add(5, 3)}");

        Action printMessage = () => Console.WriteLine("Lambda method executed.");
        printMessage();

        Console.ReadLine();
    }

    static void PrintMessage(string message)
    {
        Console.WriteLine(message);
    }

    static void UseAction(Action action)
    {
        action();
    }

    static T UseFunc<T>(Func<int, int, T> func, int a, int b)
    {
        return func(a, b);
    }

    static bool UsePredicate(Predicate<int> predicate, int value)
    {
        return predicate(value);
    }
}

